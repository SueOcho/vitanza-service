language: cpp

os: linux
dist: focal

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: secure: "sey40oov301o7ugfcxxWp503t56X5zP5gMqEdz0EOkTC7WMP+ih/hBUXd9z+LDbmeq5k9/G9CFOKPvdci1eITRASGFspxB0PTYFeDN3Eh0qMhz0wsRgKJzDR71W7bggQs0A26SRRiqo0X9hxY/QoYyHDtodq3hfiGWC+JGoy2UI+owHk7FqrRzzC//3saJ1JvTHqMecCojfjs3YFsJjPOkbLq+/n0dC6VcAnDaWlourd89e2ixI9jF+6mIbQhsczJLRoIpvqg0MxOHFda/6ijYobkbtruJDZ/BRDsOwCCQbJ+iBzoxuLuybthUo0webGJQN/gM2hR6ferCYtDJ0TBFrnXLUELZbljPnenxP7/JxkRsqGALqWQxH4CuDFDjbhQoUcNUocyGK8lLSz4hljVGGfst/HxvIPyLBSXmV+m4Ybl1PuPGejkZ5XsLkApE6XhVJnrUA65Za4v1K68QUG1zASNzBeyoxHQuaSL3Gfjf86J4p2/g/Lv1oLTIP1TC6GzcqFqH2DTm9JlASEXqt5ZkyCkdCs/Xuy1Slv3wtgy+RdTnO1INRspQOt7O5iTNgsHHdFDRlyiXhlBv0fDpLGCvC3GsPrOkdMOFoSlvoNwn1uE2GFe7str6S8+azZ1jfvL+Uab4B4WQRjUzjUqHsevR5XdDyix8wdnjMiHFY0XRM="


jobs:
   include:
        
      - env: DB=mysql
        arch: amd64
        compiler: gcc
       
      - env: DB=dynamo
        arch: amd64
        compiler: gcc

      - env: DB=dynamo
        arch: arm64-graviton2
        compiler: gcc

branches:
    only:
        - main

cache: apt
addons:
  apt:
    packages:
      - libboost-system-dev
      - libmysqlclient-dev
      - libcurl4-openssl-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
      - libpulse-dev
      
  coverity_scan:
    project:
      name: "dominique120/vitanza-service"
      description: "microservice implementation for dynbamodb"
    notification_email: dominique120@live.com
    build_command_prepend: "cmake -DDB_DYNAMO=ON  ../vitanza-service"
    build_command: make -j2
    branch_pattern: coverity_scan
   
  

before_install: 
    - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
    - git clone https://github.com/aws/aws-sdk-cpp.git
    - mkdir aws-sdk-cpp.build && cd aws-sdk-cpp.build
    - cmake ../aws-sdk-cpp -DBUILD_ONLY="dynamodb" -DENABLE_TESTING=OFF -DCUSTOM_MEMORY_MANAGEMENT=OFF  -DBUILD_SHARED_LIBS=OFF
    - sudo make && sudo make install
    - cd ..
    - git clone https://github.com/Thalhammer/jwt-cpp.git
    - mkdir jwt-cpp.build && cd jwt-cpp.build
    - cmake -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF ../jwt-cpp
    - make && sudo make install    
    - cd ..
    - git clone https://github.com/meltwater/served.git
    - mkdir served.build && cd served.build
    - cmake ../served -DSERVED_BUILD_EXAMPLES=OFF -DSERVED_BUILD_TESTS=OFF -DSERVED_BUILD_SHARED=ON -DSERVED_BUILD_STATIC=ON
    - make && sudo make install
    - sudo ln /usr/local/lib/libserved.so.1.4 /usr/lib64/libserved.so.1.4
    - cd ..
    - git clone https://github.com/dominique120/vitanza-service.git
    - mkdir vts && mkdir vts.build && cd vts.build
    - if [ "$DB" = "dynamo" ]; then cmake -DDB_DYNAMO=ON ../vitanza-service; fi
    - if [ "$DB" = "mysql" ]; then cmake -DDB_MYSQL=ON -DDB_DYNAMO=OFF ../vitanza-service; fi
       
script: make -j2

